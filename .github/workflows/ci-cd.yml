name: Django CI/CD

on:
  push:
    branches:
      - main  # Trigger on pushes to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Add a step to configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ secrets.AWS_REGION }} # or your AWS region 
    # Step 1: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Adjust this to your specific Python version

    # Step 2: Install dependencies
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    # Create logs directory
    - name: Create logs directory
      run: |
        mkdir -p ${{ github.workspace }}/../logs
    # Step 3: Run tests
    - name: Run tests
      run: |
        python manage.py test

    # Step 4: Deploy to EC2 if tests pass
    - name: Deploy to EC2
      if: success()  # This ensures deployment happens only if tests pass
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "."
        target: "/home/ec2-user/django/django-portfolio"
        rsync-options: "--exclude='*'"
    # Step 5: Execute remote SSH commands
    - name: Execute SSH commands
      if: success()
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          set -e
          cd /home/ec2-user/django/django-portfolio
          source venv/bin/activate
          pip install -r requirements.txt
          python3 manage.py migrate
          python3 manage.py collectstatic --noinput
          sudo systemctl restart gunicorn
